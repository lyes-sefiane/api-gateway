# ==============================
# =    Spring Cloud Gateway    =
# ==============================
spring.cloud.gateway.routes[0].id=grocery-items-management

# Routes
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/groceryitem/api/**
spring.cloud.gateway.routes[0].predicates[1]=Method=GET,POST,PUT,DELETE
spring.cloud.gateway.routes[0].filters[0].name=RequestRateLimiter
spring.cloud.gateway.routes[0].filters[0].args[redis-rate-limiter.replenishRate]=10
spring.cloud.gateway.routes[0].filters[0].args[redis-rate-limiter.burstCapacity]=20
spring.cloud.gateway.routes[0].filters[0].args[redis-rate-limiter.requestedTokens]=1
spring.cloud.gateway.routes[0].filters[0].args[key-resolver]=#{@customKeyResolver}

# https://andifalk.gitbook.io/spring-cloud-gateway-workshop/hands-on-labs/lab2
# Retry
spring.cloud.gateway.routes[0].filters[1].name=Retry
spring.cloud.gateway.routes[0].filters[1].args[retries]=2
spring.cloud.gateway.routes[0].filters[1].args[statuses]=SERVICE_UNAVAILABLE
spring.cloud.gateway.routes[0].filters[1].args[methods]=GET
spring.cloud.gateway.routes[0].filters[1].args[backoff.firstBackoff]=10ms
spring.cloud.gateway.routes[0].filters[1].args[backoff.maxBackoff]=50ms
spring.cloud.gateway.routes[0].filters[1].args[backoff.factor]=3
spring.cloud.gateway.routes[0].filters[1].args[backoff.basedOnPreviousValue]=false

# CircuitBreaker
spring.cloud.gateway.routes[0].filters[2].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[2].args[name]=groceryItemsManagementCircuitBreaker
spring.cloud.gateway.routes[0].filters[2].args[fallbackUri]=forward:/service-unavailable